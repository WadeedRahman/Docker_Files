#Docker File

FROM php:8.1.2-fpm
WORKDIR /var/www/
RUN apt-get update && apt-get install -y \
    libpng-dev \
    libjpeg-dev \
    libfreetype6-dev \
    libzip-dev \
    zip \
    unzip \
    wget \
    && docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install gd pdo pdo_mysql zip \
    && docker-php-ext-install exif
# Install Composer
RUN wget -O composer-setup.php https://getcomposer.org/installer && \
    php composer-setup.php --install-dir=/usr/local/bin --filename=composer && \
    rm composer-setup.php
# Copy composer.lock and composer.json
COPY composer.lock composer.json ./
# Install composer dependencies
RUN composer install --no-scripts --no-autoloader
# Copy existing application directory contents
COPY . .
# Generate autoload files
RUN composer dump-autoload
# Set permissions
RUN chown -R www-data:www-data /var/www/laravel/storage /var/www/laravel/bootstrap/cache
# Expose port 9000 to be used by nginx or other web server
EXPOSE 9000
# Run PHP-FPM
CMD ["php-fpm"]


#docker-compose.yml file
services:
    laravel:
        build:
            context: .
            dockerfile: Dockerfile
        ports:
            - '9000:9000'
        volumes:
            - '.:/var/www/laravel'
        depends_on:
            - mysql
        environment:
            - DB_CONNECTION=mysql
            - DB_HOST=mysql
            - DB_PORT=3306
            - DB_DATABASE=
            - DB_USERNAME=
            - DB_PASSWORD=
    mysql:
        image: 'mysql:latest'
        environment:
            MYSQL_ROOT_PASSWORD: root_password
            MYSQL_DATABASE: 
            MYSQL_USER: 
            MYSQL_PASSWORD: 
        ports:
            - '3306:3306'
        volumes:
            - 'mysql_data:/var/lib/mysql'
volumes:
    mysql_data: null
    sail-mysql:
        driver: local
